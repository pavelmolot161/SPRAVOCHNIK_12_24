

# Чтобы создать новый репозиторий на GitHub и клонировать его в PyCharm, следуй этим шагам:
#
#       Создание нового репозитория на GitHub
# Войти в GitHub: Перейди на GitHub и войди в свой аккаунт.
#       Создать новый репозиторий:
# Нажми на кнопку "New" или "Создать репозиторий" на главной странице или в разделе "Repositories".
#       Заполни поля:
# Repository name: Укажи имя репозитория.
# Description: (необязательно) Добавь описание.
# Public/Private: Выбери, будет ли репозиторий публичным или приватным.
# Нажми на кнопку "Create repository".
# Клонирование репозитория в PyCharm
# Скопировать URL репозитория:
#
# После создания репозитория, на странице репозитория нажми на кнопку "Code" и скопируй URL (HTTPS или SSH).
#       Открыть PyCharm:
#
#       Запусти PyCharm.
#       Клонировать репозиторий:
#
# На главном экране выбери "Get from Version Control" или "Получить из системы контроля версий".
# Вставь скопированный URL в поле "URL".
# Укажи путь, где ты хочешь сохранить проект на своем компьютере.
# Нажми "Clone" или "Клонировать".
#       Создание нового проекта:
#
# PyCharm автоматически создаст новый проект на основе клонированного репозитория.
# Теперь у тебя есть новый репозиторий на GitHub, и он клонирован в PyCharm как новый проект.

#_____________________________________________________________________________________________________________

### - Отдельный блок работы с ВЕТКАМИ

# Проверьте текущие ветки с помощью команды:
#                                                    >>> git branch

# Создайте новую ветку для второго домашнего задания:
#                                                    >>> git checkout -b homework_2

# Добавьте и зафиксируйте изменения (ВНИМАНИЕ точка через пробел после add):
#                                                    >>> git add .
#                                                    >>> git commit -m "Добавлено второе домашнее задание"
# Отправьте ветку на удалённый репозиторий:
#                                                    >>> git push origin homework_2

# Переключитесь на ветку, от которой хотите создать новую ветку:
#                                                    >>> git checkout homework_2
# Создайте новую ветку от текущей. Например, если Вы хотите создать ветку для доработки второго задания:
#                                                    >>> git checkout -b homework_2_update
# Внесите изменения в код и зафиксируйте их:
#                                                    >>> git add .
#                                                    >>> git commit -m "Доработка второго домашнего задания"
# Отправьте новую ветку на удалённый репозиторий:
#                                                    >>> git push origin homework_2_update
